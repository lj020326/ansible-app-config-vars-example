---

#- name: Set the app services vars
#  include_vars:
#    file: "app-services/{{ item }}.yml"
#    name: "app_service_configs__{{ item }}"
#  with_items: "{{ app_services }}"

#- name: Combine configs into one dict
#  set_fact:
#    app_configs: "{{ app_configs|d({}) | combine({ item: hostvars[inventory_hostname]['app_service_configs__'+item]|d({}) }) }}"
#  with_items: "{{ app_services }}"

## Note that app_config_dirs and values within app_firewalld_ports do not get dereferenced
## perhaps related to :
## https://github.com/ansible/ansible/issues/36024
#- debug:
#    var: app_configs

## try using method described here:
## https://stackoverflow.com/questions/45285574/ansible-include-vars-into-dictionary
- name: Set the app services vars
  include_vars:
    file: "app-services/{{ item }}.yml"
    name: "default_config"
  with_items: "{{ app_services }}"
  register: default_configs

- name: Combine configs into one dict
  set_fact:
    app_configs: "{{ dict(default_configs.results | json_query('[].[item, ansible_facts.default_config]')) }}"

## Note that app_config_dirs and values within app_firewalld_ports do not get dereferenced
## perhaps related to :
## https://github.com/ansible/ansible/issues/36024
- debug:
    var: app_configs

- name: Combine firewalld app port lists into single config dict
  set_fact:
    firewalld_app_ports: "{{ firewalld_app_ports|d({}) | combine({ item: hostvars[inventory_hostname].app_configs[item].app_firewalld_ports|d([]) }) }}"
  with_items: "{{ app_services }}"

- debug:
    var: firewalld_app_ports
